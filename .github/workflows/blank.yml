name: Terraform Deployment with OPA Policies

on: [push, pull_request, workflow_dispatch]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Authenticate to Google Cloud
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
      run: |
        echo $GOOGLE_APPLICATION_CREDENTIALS > /tmp/credentials.json
        gcloud auth activate-service-account --key-file=/tmp/credentials.json

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan.binary

    - name: Convert Terraform plan to JSON
      run: terraform show -json tfplan.binary > tfplan.json

    - name: Setup OPA
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest

    - name: Run OPA Policy Check
      run: |
        echo "Running OPA policy check"
        opa eval --input tfplan.json --data enforce_gcs_private.rego "data.terraform.deny" -f pretty -o result.json
        cat result.json
        if grep -q "GCS buckets must not be PUBLIC" result.json; then 
          echo "OPA policy check failed"
          exit 1
        fi
#        if ! opa eval --input tfplan.json --data enforce_gcs_private.rego "data.terraform.deny"; then
#            echo "OPA policy check failed"
        
   #         exit 1
   #     fi

    - name: Terraform Apply
      if: success()
      run: terraform apply -auto-approve tfplan.binary
